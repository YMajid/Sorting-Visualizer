{"version":3,"sources":["SortingAlgorithms/TestSortingAlgorithms.js","SortingAlgorithms/Swap.js","SortingAlgorithms/BubbleSort.js","SortingAlgorithms/MergeSort.js","SortingAlgorithms/QuickSort.js","Components/Footer.jsx","Components/SortingVisualizer.jsx","App.js","index.js"],"names":["testSortingAlgorithms","originalArray","sortedArray","areEqual","firstArray","secondArray","length","i","arraysAreEqual","slice","sort","a","b","alert","console","log","swap","numsArray","j","temp","bubbleSort","array","animationSpeed","animations","push","bubbleSortAlgorithm","previousFirstIndex","arrayBars","document","getElementsByClassName","firstBarIndex","secondBarIndex","firstBarStyle","style","secondBarStyle","colour","setTimeout","backgroundColor","newHeight","height","drawAnimation","mergeSort","auxiliaryArray","mergeSortAlgorithm","start","end","middle","Math","floor","k","merge","quickSort","quickSortAlgorithm","pivot","left","right","previousPivotIndex","pivotBarIndex","pivotBarStyle","Footer","id","this","footerStyle","className","onClick","props","generateArray","Component","SortingVisualizer","state","valuesArray","sorted","resetValuesArray","min","max","random","setState","animationSpeedMS","map","value","index","key","React","App","ReactDOM","render","getElementById"],"mappings":"8TAuBeA,MAvBf,SAA+BC,EAAeC,GAC5C,IACMC,EAUR,SAAwBC,EAAYC,GAClC,GAAkB,MAAdD,GAAqC,MAAfC,EAAqB,OAAOD,IAAeC,EACrE,GAAID,EAAWE,SAAWD,EAAYC,OAAQ,OAAO,EAErD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWE,OAAQC,IACrC,GAAIH,EAAWG,KAAOF,EAAYE,GAAI,OAAO,EAG/C,OAAO,EAlBUC,CADKP,EAAcQ,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAChBV,GAC/C,IAAKC,EAGH,OAFAU,MAAM,+DACNC,QAAQC,IAAI,gBAAiBZ,GAG7BW,QAAQC,IAAI,gBAAiBZ,I,OCFlBa,MANf,SAAcC,EAAWV,EAAGW,GAC1B,IAAMC,EAAOF,EAAUV,GACvBU,EAAUV,GAAKU,EAAUC,GACzBD,EAAUC,GAAKC,GC4DFC,MA7Df,SAAoBC,EAAOC,GACzB,GAAID,EAAMf,QAAU,EAAG,OAAOe,EAE9B,IAAME,EAAa,GAKnB,OAGF,SAA6BN,EAAWM,GACtC,IAAK,IAAIhB,EAAI,EAAGA,EAAIU,EAAUX,OAAQC,IAAK,CACzC,IAAK,IAAIW,EAAIX,EAAI,EAAGW,EAAID,EAAUX,OAAQY,IACxCK,EAAWC,KAAK,CAACjB,EAAGW,IACpBK,EAAWC,KAAK,CAACjB,EAAGW,IAChBD,EAAUV,GAAKU,EAAUC,IAC3BK,EAAWC,KAAK,CAACjB,EAAGU,EAAUC,KAC9BK,EAAWC,KAAK,CAACN,EAAGD,EAAUV,KAC9BS,EAAKC,EAAWV,EAAGW,KAEnBK,EAAWC,KAAK,CAACjB,EAAGU,EAAUV,KAC9BgB,EAAWC,KAAK,CAACN,EAAGD,EAAUC,MAGlCK,EAAWC,KAAK,CAACjB,EAAGA,IACpBgB,EAAWC,KAAK,CAACjB,EAAGA,IACpBgB,EAAWC,KAAK,CAACjB,EAAGU,EAAUV,KAC9BgB,EAAWC,KAAK,CAACjB,EAAGU,EAAUV,MAxBhCkB,CAAoBJ,EAAOE,GA4B7B,SAAuBA,EAAYD,GAGjC,IAFA,IAAII,EAAqB,EADwB,WAGxCnB,GACP,IAAMoB,EAAYC,SAASC,uBAAuB,aAElD,GADqBtB,EAAI,EAAI,EACX,CAAC,IAAD,cACwBgB,EAAWhB,GADnC,GACTuB,EADS,KACMC,EADN,KAEVC,EAAgBL,EAAUG,GAAeG,MACzCC,EAAiBP,EAAUI,GAAgBE,MAC3CE,EAAS5B,EAAI,IAAM,EAAI,MAAQ,QACrC6B,YAAW,WACLN,IAAkBJ,GACSC,EAAUD,GAAoBO,MACtCI,gBAAkB,QACvCX,EAAqBI,GAChBE,EAAcK,gBAAkB,MACvCH,EAAeG,gBAAkBF,IAChC5B,EAAIe,QAEPc,YAAW,WAAO,IAAD,cACoBb,EAAWhB,GAD/B,GACRuB,EADQ,KACOQ,EADP,KAEOX,EAAUG,GAAeG,MACjCM,OAAd,UAA0BD,EAA1B,QACC/B,EAAIe,IArBFf,EAAI,EAAGA,EAAIgB,EAAWjB,OAAQC,IAAM,EAApCA,GA7BTiC,CAAcjB,EAAYD,GAEnBD,GCkEMoB,MA5Ef,SAAmBpB,EAAOC,GACxB,GAAID,EAAMf,QAAU,EAAG,OAAOe,EAE9B,IAAME,EAAa,GACbmB,EAAiBrB,EAAMZ,QAK7B,OAGF,SAASkC,EAAmB1B,EAAW2B,EAAOC,EAAKH,EAAgBnB,GACjE,GAAIqB,IAAUC,EAAK,OAEnB,IAAMC,EAASC,KAAKC,MAAMJ,GAASC,EAAMD,GAAS,GAClDD,EAAmBD,EAAgBE,EAAOE,EAAQ7B,EAAWM,GAC7DoB,EAAmBD,EAAgBI,EAAS,EAAGD,EAAK5B,EAAWM,GAIjE,SAAeN,EAAW2B,EAAOE,EAAQD,EAAKH,EAAgBnB,GAC5D,IAAI0B,EAAIL,EACJrC,EAAIqC,EACJ1B,EAAI4B,EAAS,EAEjB,KAAOvC,GAAKuC,GAAU5B,GAAK2B,GACzBtB,EAAWC,KAAK,CAACjB,EAAGW,IACpBK,EAAWC,KAAK,CAACjB,EAAGW,IAChBwB,EAAenC,IAAMmC,EAAexB,IACtCK,EAAWC,KAAK,CAACyB,EAAGP,EAAenC,KACnCU,EAAUgC,KAAOP,EAAenC,OAEhCgB,EAAWC,KAAK,CAACyB,EAAGP,EAAexB,KACnCD,EAAUgC,KAAOP,EAAexB,MAIpC,KAAOX,GAAKuC,GACVvB,EAAWC,KAAK,CAACjB,EAAGA,IACpBgB,EAAWC,KAAK,CAACjB,EAAGA,IACpBgB,EAAWC,KAAK,CAACyB,EAAGP,EAAenC,KACnCU,EAAUgC,KAAOP,EAAenC,KAGlC,KAAOW,GAAK2B,GACVtB,EAAWC,KAAK,CAACN,EAAGA,IACpBK,EAAWC,KAAK,CAACN,EAAGA,IACpBK,EAAWC,KAAK,CAACyB,EAAGP,EAAexB,KACnCD,EAAUgC,KAAOP,EAAexB,KA/BlCgC,CAAMjC,EAAW2B,EAAOE,EAAQD,EAAKH,EAAgBnB,GAbrDoB,CAAmBtB,EAAO,EAAGA,EAAMf,OAAS,EAAGoC,EAAgBnB,GAgDjE,SAAuBA,EAAYD,GACjC,IADkD,IAAD,WACxCf,GACP,IAAMoB,EAAYC,SAASC,uBAAuB,aAElD,GADqBtB,EAAI,IAAM,EACb,CAAC,IAAD,cACwBgB,EAAWhB,GADnC,GACTuB,EADS,KACMC,EADN,KAEVC,EAAgBL,EAAUG,GAAeG,MACzCC,EAAiBP,EAAUI,GAAgBE,MAC3CE,EAAS5B,EAAI,IAAM,EAAI,MAAQ,QACrC6B,YAAW,WACTJ,EAAcK,gBAAkBF,EAChCD,EAAeG,gBAAkBF,IAChC5B,EAAIe,QAEPc,YAAW,WAAO,IAAD,cACoBb,EAAWhB,GAD/B,GACRuB,EADQ,KACOQ,EADP,KAEOX,EAAUG,GAAeG,MACjCM,OAAd,UAA0BD,EAA1B,QACC/B,EAAIe,IAjBFf,EAAI,EAAGA,EAAIgB,EAAWjB,OAAQC,IAAM,EAApCA,GA/CTiC,CAAcjB,EAAYD,GAEnBD,GCuEM8B,MA9Ef,SAAmB9B,EAAOC,GACxB,GAAID,EAAMf,QAAU,EAAG,OAAOe,EAE9B,IAAME,EAAa,GAKnB,OAGF,SAAS6B,EAAmBnC,EAAW2B,EAAOC,EAAKtB,GACjD,GAAIqB,GAASC,EACX,OAGF,IAAIQ,EAAQT,EACRU,EAAOV,EAAQ,EACfW,EAAQV,EAEZ,KAAOS,GAAQC,GACbhC,EAAWC,KAAK,CAAC6B,EAAOC,EAAMC,IAC9BhC,EAAWC,KAAK,CAAC6B,EAAOC,EAAMC,IAC1BtC,EAAUoC,GAASpC,EAAUsC,IAAUtC,EAAUqC,GAAQrC,EAAUoC,IACrE9B,EAAWC,KAAK,CAAC8B,EAAMrC,EAAUsC,KACjChC,EAAWC,KAAK,CAAC+B,EAAOtC,EAAUqC,KAClCtC,EAAKC,EAAWqC,EAAMC,KAEtBhC,EAAWC,KAAK,CAAC8B,EAAMrC,EAAUqC,KACjC/B,EAAWC,KAAK,CAAC+B,EAAOtC,EAAUsC,MAEhCtC,EAAUqC,IAASrC,EAAUoC,IAAQC,IACrCrC,EAAUsC,IAAUtC,EAAUoC,IAAQE,IAGxCF,IAAUE,IACZhC,EAAWC,KAAK,CAAC6B,EAAOA,EAAOE,IAC/BhC,EAAWC,KAAK,CAAC6B,EAAOA,EAAOE,IAC/BhC,EAAWC,KAAK,CAAC+B,EAAOtC,EAAUoC,KAClC9B,EAAWC,KAAK,CAAC6B,EAAOpC,EAAUsC,KAClCvC,EAAKC,EAAWoC,EAAOE,IAGzBH,EAAmBnC,EAAW2B,EAAOW,EAAQ,EAAGhC,GAChD6B,EAAmBnC,EAAWsC,EAAQ,EAAGV,EAAKtB,GAxC9C6B,CAAmB/B,EAAO,EAAGA,EAAMf,OAAS,EAAGiB,GA2CjD,SAAuBA,EAAYD,GAGjC,IAFA,IAAIkC,EAAqB,EADwB,WAGxCjD,GACP,IAAMoB,EAAYC,SAASC,uBAAuB,aAElD,GADqBtB,EAAI,EAAI,EACX,CAAC,IAAD,cACuCgB,EAAWhB,GADlD,GACTkD,EADS,KACM3B,EADN,KACqBC,EADrB,KAEV2B,EAAgB/B,EAAU8B,GAAexB,MACzCD,EAAgBL,EAAUG,GAAeG,MACzCC,EAAiBP,EAAUI,GAAgBE,MAC3CE,EAAS5B,EAAI,IAAM,EAAI,MAAQ,QACrC6B,YAAW,WACLqB,IAAkBD,GACO7B,EAAU6B,GAAoBvB,MACtCI,gBAAkB,QACrCmB,EAAqBC,GAChBC,EAAcrB,gBAAkB,MACvCL,EAAcK,gBAAkBF,EAChCD,EAAeG,gBAAkBF,IAChC5B,EAAIe,QAEPc,YAAW,WAAO,IAAD,cACoBb,EAAWhB,GAD/B,GACRuB,EADQ,KACOQ,EADP,KAEOX,EAAUG,GAAeG,MACjCM,OAAd,UAA0BD,EAA1B,QACC/B,EAAIe,IAvBFf,EAAI,EAAGA,EAAIgB,EAAWjB,OAAQC,IAAM,EAApCA,GA5CTiC,CAAcjB,EAAYD,GAEnBD,GCcMsC,G,6KAnBX,OACE,yBAAKC,GAAG,SAAS3B,MAAO4B,KAAKC,aAC3B,uBAAGF,GAAG,gBAAgBG,UAAU,kBAAkBC,QAASH,KAAKI,MAAMC,eAAtE,sBAGA,uBAAGN,GAAG,aAAaG,UAAU,kBAAkBC,QAASH,KAAKI,MAAM7C,YAAnE,eAGA,uBAAGwC,GAAG,YAAYG,UAAU,kBAAkBC,QAASH,KAAKI,MAAMxB,WAAlE,cAGA,uBAAGmB,GAAG,YAAYG,UAAU,kBAAkBC,QAASH,KAAKI,MAAMd,WAAlE,mB,GAbagB,cCKfC,E,kDACJ,WAAYH,GAAQ,IAAD,8BACjB,cAAMA,IAEDI,MAAQ,CACXC,YAAa,GACbC,QAAQ,GALO,E,iEAWjBV,KAAKW,qB,yCAKL,IADA,IAmD2BC,EAAKC,EAnD1BrD,EAAQ,GACLd,EAAI,EAAGA,EAAI,GAAIA,IACtBc,EAAMG,MAiDmBiD,EAjDQ,IAiDHC,EAjDQ,IAkDnC3B,KAAKC,MAAMD,KAAK4B,UAAYD,EAAMD,EAAM,IAAMA,IAhDnDZ,KAAKe,SAAS,CAAEN,YAAajD,EAAOkD,QAAQ,M,iCAGnClD,EAAOkD,GAChB,IAAIA,EAAJ,CACA,IAAMrE,EAAckB,EAAWC,EAAMZ,QAASoE,GAC9C7E,EAAsBqB,EAAOnB,GAC7B2D,KAAKe,SAAS,CAAEL,QAAQ,O,gCAGhBlD,EAAOkD,GACf,IAAIA,EAAJ,CACA,IAAMrE,EAAcuC,EAAUpB,EAAMZ,QAASoE,GAC7C7E,EAAsBqB,EAAOnB,GAC7B2D,KAAKe,SAAS,CAAEL,QAAQ,O,gCAGhBlD,EAAOkD,GACf,IAAIA,EAAJ,CACA,IAAMrE,EAAciD,EAAU9B,EAAMZ,QAASoE,GAC7C7E,EAAsBqB,EAAOnB,GAC7B2D,KAAKe,SAAS,CAAEL,QAAQ,O,+BAGhB,IAAD,OACDlD,EAAQwC,KAAKQ,MAAMC,YACnBC,EAASV,KAAKQ,MAAME,OAE1B,OADAzD,QAAQC,IAAIM,GAEV,yBAAK0C,UAAU,mBACZ1C,EAAMyD,KAAI,SAACC,EAAOC,GAAR,OACT,yBAAKjB,UAAU,YAAYkB,IAAKD,EAAO/C,MAAO,CAAEM,OAAO,GAAD,OAAKwC,EAAL,YAExD,6BACA,kBAAC,EAAD,CACEb,cAAe,kBAAM,EAAKM,oBAC1BpD,WAAY,kBAAM,EAAKA,WAAWC,EAAOkD,IACzC9B,UAAW,kBAAM,EAAKA,UAAUpB,EAAOkD,IACvCpB,UAAW,kBAAM,EAAKA,UAAU9B,EAAOkD,W,GA1DjBW,IAAMf,WAiEhCU,EAAmB,GAMVT,QClEAe,G,MATH,WACV,OACE,yBAAKpB,UAAU,OACb,kDACA,kBAAC,EAAD,SCHNqB,IAASC,OAAO,kBAAC,EAAD,MAASzD,SAAS0D,eAAe,W","file":"static/js/main.a3163fc3.chunk.js","sourcesContent":["function testSortingAlgorithms(originalArray, sortedArray) {\n  const jsSortedArray = originalArray.slice().sort((a, b) => a - b);\n  const areEqual = arraysAreEqual(jsSortedArray, sortedArray);\n  if (!areEqual) {\n    alert('Sorting algorithm is not returning the correct result.');\n    console.log('arraysEqual: ', areEqual);\n    return;\n  } else {\n    console.log('arraysEqual: ', areEqual);\n  }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray == null || secondArray == null) return firstArray === secondArray;\n  if (firstArray.length !== secondArray.length) return false;\n\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) return false;\n  }\n\n  return true;\n}\n\nexport default testSortingAlgorithms;\n","function swap(numsArray, i, j) {\n  const temp = numsArray[i];\n  numsArray[i] = numsArray[j];\n  numsArray[j] = temp;\n}\n\nexport default swap;\n","import swap from './Swap';\n\nfunction bubbleSort(array, animationSpeed) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  bubbleSortAlgorithm(array, animations);\n\n  drawAnimation(animations, animationSpeed);\n\n  return array;\n}\n\nfunction bubbleSortAlgorithm(numsArray, animations) {\n  for (let i = 0; i < numsArray.length; i++) {\n    for (let j = i + 1; j < numsArray.length; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (numsArray[i] > numsArray[j]) {\n        animations.push([i, numsArray[j]]);\n        animations.push([j, numsArray[i]]);\n        swap(numsArray, i, j);\n      } else {\n        animations.push([i, numsArray[i]]);\n        animations.push([j, numsArray[j]]);\n      }\n    }\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([i, numsArray[i]]);\n    animations.push([i, numsArray[i]]);\n  }\n}\n\nfunction drawAnimation(animations, animationSpeed) {\n  var previousFirstIndex = 0;\n\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? 'red' : 'black';\n      setTimeout(() => {\n        if (firstBarIndex !== previousFirstIndex) {\n          const previouFirstBarStyle = arrayBars[previousFirstIndex].style;\n          previouFirstBarStyle.backgroundColor = 'black';\n          previousFirstIndex = firstBarIndex;\n        } else firstBarStyle.backgroundColor = 'red';\n        secondBarStyle.backgroundColor = colour;\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default bubbleSort;\n","function mergeSort(array, animationSpeed) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  mergeSortAlgorithm(array, 0, array.length - 1, auxiliaryArray, animations);\n\n  drawAnimation(animations, animationSpeed);\n\n  return array;\n}\n\nfunction mergeSortAlgorithm(numsArray, start, end, auxiliaryArray, animations) {\n  if (start === end) return;\n\n  const middle = Math.floor(start + (end - start) / 2);\n  mergeSortAlgorithm(auxiliaryArray, start, middle, numsArray, animations);\n  mergeSortAlgorithm(auxiliaryArray, middle + 1, end, numsArray, animations);\n  merge(numsArray, start, middle, end, auxiliaryArray, animations);\n}\n\nfunction merge(numsArray, start, middle, end, auxiliaryArray, animations) {\n  let k = start;\n  let i = start;\n  let j = middle + 1;\n\n  while (i <= middle && j <= end) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i]]);\n      numsArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j]]);\n      numsArray[k++] = auxiliaryArray[j++];\n    }\n  }\n\n  while (i <= middle) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxiliaryArray[i]]);\n    numsArray[k++] = auxiliaryArray[i++];\n  }\n\n  while (j <= end) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxiliaryArray[j]]);\n    numsArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nfunction drawAnimation(animations, animationSpeed) {\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const colourChange = i % 3 !== 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 3 === 0 ? 'red' : 'black';\n      setTimeout(() => {\n        firstBarStyle.backgroundColor = colour;\n        secondBarStyle.backgroundColor = colour;\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default mergeSort;\n","import swap from './Swap';\n\nfunction quickSort(array, animationSpeed) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  quickSortAlgorithm(array, 0, array.length - 1, animations);\n\n  drawAnimation(animations, animationSpeed);\n\n  return array;\n}\n\nfunction quickSortAlgorithm(numsArray, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n\n  let pivot = start;\n  let left = start + 1;\n  let right = end;\n\n  while (left <= right) {\n    animations.push([pivot, left, right]);\n    animations.push([pivot, left, right]);\n    if (numsArray[pivot] > numsArray[right] && numsArray[left] > numsArray[pivot]) {\n      animations.push([left, numsArray[right]]);\n      animations.push([right, numsArray[left]]);\n      swap(numsArray, left, right);\n    } else {\n      animations.push([left, numsArray[left]]);\n      animations.push([right, numsArray[right]]);\n    }\n    if (numsArray[left] <= numsArray[pivot]) left++;\n    if (numsArray[right] >= numsArray[pivot]) right--;\n  }\n\n  if (pivot !== right) {\n    animations.push([pivot, pivot, right]);\n    animations.push([pivot, pivot, right]);\n    animations.push([right, numsArray[pivot]]);\n    animations.push([pivot, numsArray[right]]);\n    swap(numsArray, pivot, right);\n  }\n\n  quickSortAlgorithm(numsArray, start, right - 1, animations);\n  quickSortAlgorithm(numsArray, right + 1, end, animations);\n}\n\nfunction drawAnimation(animations, animationSpeed) {\n  var previousPivotIndex = 0;\n\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [pivotBarIndex, firstBarIndex, secondBarIndex] = animations[i];\n      const pivotBarStyle = arrayBars[pivotBarIndex].style;\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? 'red' : 'black';\n      setTimeout(() => {\n        if (pivotBarIndex !== previousPivotIndex) {\n          const previousPivotStyle = arrayBars[previousPivotIndex].style;\n          previousPivotStyle.backgroundColor = 'black';\n          previousPivotIndex = pivotBarIndex;\n        } else pivotBarStyle.backgroundColor = 'red';\n        firstBarStyle.backgroundColor = colour;\n        secondBarStyle.backgroundColor = colour;\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default quickSort;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\" style={this.footerStyle}>\n        <a id=\"generateArray\" className=\"button hvr-fade\" onClick={this.props.generateArray}>\n          Generate New Array\n        </a>\n        <a id=\"bubbleSort\" className=\"button hvr-fade\" onClick={this.props.bubbleSort}>\n          Bubble Sort\n        </a>\n        <a id=\"mergeSort\" className=\"button hvr-fade\" onClick={this.props.mergeSort}>\n          Merge Sort\n        </a>\n        <a id=\"quickSort\" className=\"button hvr-fade\" onClick={this.props.quickSort}>\n          Quick Sort\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './SortingVisualizer.css';\nimport testSortingAlgorithms from '../SortingAlgorithms/TestSortingAlgorithms';\nimport bubbleSort from '../SortingAlgorithms/BubbleSort';\nimport mergeSort from '../SortingAlgorithms/MergeSort';\nimport quickSort from '../SortingAlgorithms/QuickSort';\nimport Footer from './Footer';\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      valuesArray: [],\n      sorted: false,\n    };\n  }\n\n  //TODO: Need to change to componentDidMount\n  componentWillMount() {\n    this.resetValuesArray();\n  }\n\n  resetValuesArray() {\n    const array = [];\n    for (let i = 0; i < 80; i++) {\n      array.push(generateRandomInteger(100, 800));\n    }\n    this.setState({ valuesArray: array, sorted: false });\n  }\n\n  bubbleSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = bubbleSort(array.slice(), animationSpeedMS);\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  mergeSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = mergeSort(array.slice(), animationSpeedMS);\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  quickSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = quickSort(array.slice(), animationSpeedMS);\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  render() {\n    const array = this.state.valuesArray;\n    const sorted = this.state.sorted;\n    console.log(array);\n    return (\n      <div className=\"array-container\">\n        {array.map((value, index) => (\n          <div className=\"array-bar\" key={index} style={{ height: `${value}px` }}></div>\n        ))}\n        <br></br>\n        <Footer\n          generateArray={() => this.resetValuesArray()}\n          bubbleSort={() => this.bubbleSort(array, sorted)}\n          mergeSort={() => this.mergeSort(array, sorted)}\n          quickSort={() => this.quickSort(array, sorted)}\n        ></Footer>\n      </div>\n    );\n  }\n}\n\nconst animationSpeedMS = 10;\n\nfunction generateRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default SortingVisualizer;\n","import React from 'react';\nimport SortingVisualizer from './Components/SortingVisualizer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1>Sorting Visualizer</h1>\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}