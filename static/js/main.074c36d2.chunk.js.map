{"version":3,"sources":["algorithms/TestSortingAlgorithms.js","algorithms/Swap.js","algorithms/BubbleSort.js","algorithms/MergeSort.js","algorithms/QuickSort.js","components/Footer/Footer.jsx","components/Body/Body.jsx","App.js","index.js"],"names":["testSortingAlgorithms","originalArray","sortedArray","areEqual","firstArray","secondArray","length","i","arraysAreEqual","slice","sort","a","b","alert","console","log","swap","numsArray","j","temp","bubbleSort","array","animationSpeed","barsColour","pivotColour","selectionColour","sortedColour","animations","push","bubbleSortAlgorithm","previousFirstIndex","arrayBars","document","getElementsByClassName","firstBarIndex","secondBarIndex","firstBarStyle","style","secondBarStyle","colour","setTimeout","backgroundColor","newHeight","height","drawAnimation","mergeSort","auxiliaryArray","mergeSortAlgorithm","start","end","middle","Math","floor","isFinalSort","k","merge","quickSort","quickSortAlgorithm","pivot","left","right","previousPivotIndex","pivotBarIndex","pivotBarStyle","previousPivot","currentPivot","updatePivotColour","Footer","id","this","footerStyle","className","onClick","props","generateArray","Component","SortingVisualizer","state","valuesArray","sorted","resetValuesArray","min","max","random","setState","changeArrayBarColours","animationSpeedMS","greenColour","redColour","blueColour","map","value","index","key","React","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.074c36d2.chunk.js","sourcesContent":["function testSortingAlgorithms(originalArray, sortedArray) {\n  const jsSortedArray = originalArray.slice().sort((a, b) => a - b);\n  const areEqual = arraysAreEqual(jsSortedArray, sortedArray);\n  if (!areEqual) {\n    alert('Sorting algorithm is not returning the correct result.');\n    console.log('arraysEqual: ', areEqual);\n    return;\n  } else {\n    console.log('arraysEqual: ', areEqual);\n  }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray == null || secondArray == null) return firstArray === secondArray;\n  if (firstArray.length !== secondArray.length) return false;\n\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) return false;\n  }\n\n  return true;\n}\n\nexport default testSortingAlgorithms;\n","function swap(numsArray, i, j) {\n  const temp = numsArray[i];\n  numsArray[i] = numsArray[j];\n  numsArray[j] = temp;\n}\n\nexport default swap;\n","import swap from './Swap';\n\nfunction bubbleSort(array, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  bubbleSortAlgorithm(array, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction bubbleSortAlgorithm(numsArray, animations) {\n  for (let i = 0; i < numsArray.length; i++) {\n    for (let j = i + 1; j < numsArray.length; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (numsArray[i] > numsArray[j]) {\n        animations.push([i, numsArray[j]]);\n        animations.push([j, numsArray[i]]);\n        swap(numsArray, i, j);\n      } else {\n        animations.push([i, numsArray[i]]);\n        animations.push([j, numsArray[j]]);\n      }\n    }\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([i, numsArray[i]]);\n    animations.push([i, numsArray[i]]);\n  }\n}\n\nfunction drawAnimation(\n  animations,\n  animationSpeed,\n  barsColour,\n  pivotColour,\n  selectionColour,\n  sortedColour\n) {\n  var previousFirstIndex = 0;\n  const arrayBars = document.getElementsByClassName('array-bar');\n\n  for (let i = 0; i < animations.length; i++) {\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? selectionColour : barsColour;\n      setTimeout(() => {\n        if (firstBarIndex !== previousFirstIndex) {\n          const previouFirstBarStyle = arrayBars[previousFirstIndex].style;\n          previouFirstBarStyle.backgroundColor = sortedColour;\n          previousFirstIndex = firstBarIndex;\n        } else {\n          firstBarStyle.backgroundColor = pivotColour;\n          secondBarStyle.backgroundColor = colour;\n        }\n        if (firstBarIndex === arrayBars.length - 1) {\n          firstBarStyle.backgroundColor = sortedColour;\n        }\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default bubbleSort;\n","function mergeSort(array, animationSpeed, barsColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  mergeSortAlgorithm(array, 0, array.length - 1, auxiliaryArray, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction mergeSortAlgorithm(numsArray, start, end, auxiliaryArray, animations) {\n  if (start === end) return;\n\n  const middle = Math.floor(start + (end - start) / 2);\n  mergeSortAlgorithm(auxiliaryArray, start, middle, numsArray, animations);\n  mergeSortAlgorithm(auxiliaryArray, middle + 1, end, numsArray, animations);\n  const isFinalSort = end - start === numsArray.length - 1 ? true : false;\n  merge(numsArray, start, middle, end, auxiliaryArray, animations, isFinalSort);\n}\n\nfunction merge(numsArray, start, middle, end, auxiliaryArray, animations, isFinalSort) {\n  let k = start;\n  let i = start;\n  let j = middle + 1;\n\n  while (i <= middle && j <= end) {\n    animations.push([i, j, isFinalSort]);\n    animations.push([i, j, isFinalSort]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i], isFinalSort]);\n      numsArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j], isFinalSort]);\n      numsArray[k++] = auxiliaryArray[j++];\n    }\n  }\n\n  while (i <= middle) {\n    animations.push([i, i, isFinalSort]);\n    animations.push([i, i, isFinalSort]);\n    animations.push([k, auxiliaryArray[i], isFinalSort]);\n    numsArray[k++] = auxiliaryArray[i++];\n  }\n\n  while (j <= end) {\n    animations.push([j, j, isFinalSort]);\n    animations.push([j, j, isFinalSort]);\n    animations.push([k, auxiliaryArray[j], isFinalSort]);\n    numsArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nfunction drawAnimation(animations, animationSpeed, barsColour, selectionColour, sortedColour) {\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const colourChange = i % 3 !== 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex, isFinalSort] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 3 === 0 ? selectionColour : isFinalSort ? sortedColour : barsColour;\n      setTimeout(() => {\n        firstBarStyle.backgroundColor = colour;\n        secondBarStyle.backgroundColor = colour;\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default mergeSort;\n","import swap from './Swap';\n\nfunction quickSort(array, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  quickSortAlgorithm(array, 0, array.length - 1, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction quickSortAlgorithm(numsArray, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n\n  let pivot = start;\n  let left = start + 1;\n  let right = end;\n\n  while (left <= right) {\n    animations.push([pivot, left, right]);\n    animations.push([pivot, left, right]);\n    if (numsArray[pivot] > numsArray[right] && numsArray[left] > numsArray[pivot]) {\n      animations.push([left, numsArray[right]]);\n      animations.push([right, numsArray[left]]);\n      swap(numsArray, left, right);\n    } else {\n      animations.push([left, numsArray[left]]);\n      animations.push([right, numsArray[right]]);\n    }\n    if (numsArray[left] <= numsArray[pivot]) left++;\n    if (numsArray[right] >= numsArray[pivot]) right--;\n  }\n\n  if (pivot !== right) {\n    animations.push([pivot, pivot, right]);\n    animations.push([pivot, pivot, right]);\n    animations.push([right, numsArray[pivot]]);\n    animations.push([pivot, numsArray[right]]);\n    swap(numsArray, pivot, right);\n  }\n\n  quickSortAlgorithm(numsArray, start, right - 1, animations);\n  quickSortAlgorithm(numsArray, right + 1, end, animations);\n}\n\n//TODO: Make sure last bars gets coloured in\nfunction drawAnimation(\n  animations,\n  animationSpeed,\n  barsColour,\n  pivotColour,\n  selectionColour,\n  sortedColour\n) {\n  var previousPivotIndex = 0;\n  const arrayBars = document.getElementsByClassName('array-bar');\n\n  for (let i = 0; i < animations.length; i++) {\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [pivotBarIndex, firstBarIndex, secondBarIndex] = animations[i];\n      const pivotBarStyle = arrayBars[pivotBarIndex].style;\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? selectionColour : barsColour;\n      setTimeout(() => {\n        if (pivotBarIndex !== previousPivotIndex && firstBarIndex !== arrayBars.length - 1) {\n          updatePivotColour(arrayBars, previousPivotIndex, pivotBarIndex, sortedColour);\n          previousPivotIndex = pivotBarIndex;\n        } else {\n          pivotBarStyle.backgroundColor = pivotColour;\n          firstBarStyle.backgroundColor = colour;\n          secondBarStyle.backgroundColor = colour;\n        }\n      }, i * 1);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * 1);\n    }\n  }\n}\n\nfunction updatePivotColour(arrayBars, previousPivot, currentPivot, sortedColour) {\n  for (let i = previousPivot; i < currentPivot; i++) {\n    const previousPivotStyle = arrayBars[i].style;\n    previousPivotStyle.backgroundColor = sortedColour;\n  }\n}\n\nexport default quickSort;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div id=\"footer\" style={this.footerStyle}>\n        <a id=\"generateArray\" className=\"button hvr-fade\" onClick={this.props.generateArray}>\n          Generate New Array\n        </a>\n        <a id=\"bubbleSort\" className=\"button hvr-fade\" onClick={this.props.bubbleSort}>\n          Bubble Sort\n        </a>\n        <a id=\"mergeSort\" className=\"button hvr-fade\" onClick={this.props.mergeSort}>\n          Merge Sort\n        </a>\n        <a id=\"quickSort\" className=\"button hvr-fade\" onClick={this.props.quickSort}>\n          Quick Sort\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Body.css';\nimport testSortingAlgorithms from '../../algorithms/TestSortingAlgorithms';\nimport bubbleSort from '../../algorithms/BubbleSort';\nimport mergeSort from '../../algorithms/MergeSort';\nimport quickSort from '../../algorithms/QuickSort';\nimport Footer from '../Footer/Footer';\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      valuesArray: [],\n      sorted: false,\n    };\n  }\n\n  //TODO: Need to change to componentDidMount\n  componentWillMount() {\n    this.resetValuesArray();\n  }\n\n  resetValuesArray() {\n    const array = [];\n    for (let i = 0; i < 50; i++) {\n      array.push(generateRandomInteger(300, 800));\n    }\n    this.setState({ valuesArray: array, sorted: false });\n    this.changeArrayBarColours(barsColour);\n  }\n\n  changeArrayBarColours(colour) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < arrayBars.length; i++) {\n      const barStyle = arrayBars[i].style;\n      barStyle.backgroundColor = colour;\n    }\n  }\n\n  bubbleSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = bubbleSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      greenColour,\n      redColour,\n      blueColour\n    );\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  mergeSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = mergeSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      redColour,\n      blueColour\n    );\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  quickSort(array, sorted) {\n    if (sorted) return;\n    const sortedArray = quickSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      greenColour,\n      redColour,\n      blueColour\n    );\n    testSortingAlgorithms(array, sortedArray);\n    this.setState({ sorted: true });\n  }\n\n  render() {\n    const array = this.state.valuesArray;\n    const sorted = this.state.sorted;\n    console.log(array);\n    return (\n      <div className=\"array-container\">\n        {array.map((value, index) => (\n          <div className=\"array-bar\" key={index} style={{ height: `${value}px` }}></div>\n        ))}\n        <br></br>\n        <Footer\n          generateArray={() => this.resetValuesArray()}\n          bubbleSort={() => this.bubbleSort(array, sorted)}\n          mergeSort={() => this.mergeSort(array, sorted)}\n          quickSort={() => this.quickSort(array, sorted)}\n        ></Footer>\n      </div>\n    );\n  }\n}\n\nconst animationSpeedMS = 10;\nconst greenColour = '#29D8A8';\nconst blueColour = '#227EE1';\nconst redColour = '#FF6263';\nconst barsColour = '#282a2b';\n\nfunction generateRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default SortingVisualizer;\n","import React from 'react';\nimport SortingVisualizer from './components/Body/Body';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1>Sorting Visualizer</h1>\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}