{"version":3,"sources":["components/Body/Body.jsx","containers/BodyContainer.js","components/Footer/Footer.jsx","constants.js","algorithms/MergeSort.js","algorithms/Swap.js","algorithms/QuickSort.js","algorithms/BubbleSort.js","reducers/arrayReducer.js","reducers/sortedReducer.js","algorithms/TestSortingAlgorithms.js","containers/FooterContainer.js","App.js","reducers/store.js","index.js"],"names":["Body","props","this","array","isSorted","className","map","value","index","key","style","height","React","Component","connect","state","dispatch","Footer","generateNewArray","bubbleSort","mergeSort","quickSort","id","footerStyle","onClick","constants","animationSpeedMS","greenColour","blueColour","redColour","barsColour","animationSpeed","selectionColour","sortedColour","length","animations","auxiliaryArray","slice","mergeSortAlgorithm","numsArray","start","end","middle","Math","floor","isFinalSort","k","i","j","push","merge","arrayBars","document","getElementsByClassName","firstBarIndex","secondBarIndex","firstBarStyle","secondBarStyle","colour","setTimeout","backgroundColor","newHeight","drawAnimation","swap","temp","updatePivotColour","previousPivot","currentPivot","pivotColour","quickSortAlgorithm","pivot","left","right","previousPivotIndex","pivotBarIndex","pivotBarStyle","bubbleSortAlgorithm","previousFirstIndex","setArray","createAction","handleActions","SET_ARRAY","payload","setSorted","SET_SORTED","testSortingAlgorithms","originalArray","sortedArray","areEqual","firstArray","secondArray","arraysAreEqual","sort","a","b","alert","console","log","min","max","minHeight","window","innerHeight","maxHeight","barsCount","innerWidth","random","changeArrayBarColours","sorted","App","reducers","combineReducers","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.24ec0d8a.chunk.js","sourcesContent":["import './Body.css';\nimport React from 'react';\n\nclass Body extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { array, isSorted } = this.props;\n    return (\n      <div className=\"array-container\">\n        {array.map((value, index) => (\n          <div className=\"array-bar\" key={index} style={{ height: `${value}px` }}></div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import Body from '../components/Body/Body';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n  array: state.array,\n  isSorted: state.isSorted,\n});\n\nconst mapDispatchToProps = () => (dispatch) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\n","import './Footer.css';\nimport React from 'react';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { generateNewArray } = this.props;\n    generateNewArray();\n  }\n\n  render() {\n    const { generateNewArray, bubbleSort, mergeSort, quickSort, array, isSorted } = this.props;\n    return (\n      <div id=\"footer\" style={this.footerStyle}>\n        <a id=\"generateArray\" className=\"button hvr-fade\" onClick={() => generateNewArray()}>\n          Generate New Array\n        </a>\n        <a id=\"bubbleSort\" className=\"button hvr-fade\" onClick={() => bubbleSort(array, isSorted)}>\n          Bubble Sort\n        </a>\n        <a id=\"mergeSort\" className=\"button hvr-fade\" onClick={() => mergeSort(array, isSorted)}>\n          Merge Sort\n        </a>\n        <a id=\"quickSort\" className=\"button hvr-fade\" onClick={() => quickSort(array, isSorted)}>\n          Quick Sort\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","const animationSpeedMS = 10;\nconst greenColour = '#29D8A8';\nconst blueColour = '#227EE1';\nconst redColour = '#FF6263';\nconst barsColour = '#282a2b';\n\nconst constants = {\n  animationSpeedMS,\n  greenColour,\n  blueColour,\n  redColour,\n  barsColour,\n};\n\nexport default constants;\n","function mergeSort(array, animationSpeed, barsColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  const auxiliaryArray = array.slice();\n  mergeSortAlgorithm(array, 0, array.length - 1, auxiliaryArray, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction mergeSortAlgorithm(numsArray, start, end, auxiliaryArray, animations) {\n  if (start === end) return;\n\n  const middle = Math.floor(start + (end - start) / 2);\n  mergeSortAlgorithm(auxiliaryArray, start, middle, numsArray, animations);\n  mergeSortAlgorithm(auxiliaryArray, middle + 1, end, numsArray, animations);\n  const isFinalSort = end - start === numsArray.length - 1 ? true : false;\n  merge(numsArray, start, middle, end, auxiliaryArray, animations, isFinalSort);\n}\n\nfunction merge(numsArray, start, middle, end, auxiliaryArray, animations, isFinalSort) {\n  let k = start;\n  let i = start;\n  let j = middle + 1;\n\n  while (i <= middle && j <= end) {\n    animations.push([i, j, isFinalSort]);\n    animations.push([i, j, isFinalSort]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      animations.push([k, auxiliaryArray[i], isFinalSort]);\n      numsArray[k++] = auxiliaryArray[i++];\n    } else {\n      animations.push([k, auxiliaryArray[j], isFinalSort]);\n      numsArray[k++] = auxiliaryArray[j++];\n    }\n  }\n\n  while (i <= middle) {\n    animations.push([i, i, isFinalSort]);\n    animations.push([i, i, isFinalSort]);\n    animations.push([k, auxiliaryArray[i], isFinalSort]);\n    numsArray[k++] = auxiliaryArray[i++];\n  }\n\n  while (j <= end) {\n    animations.push([j, j, isFinalSort]);\n    animations.push([j, j, isFinalSort]);\n    animations.push([k, auxiliaryArray[j], isFinalSort]);\n    numsArray[k++] = auxiliaryArray[j++];\n  }\n}\n\nfunction drawAnimation(animations, animationSpeed, barsColour, selectionColour, sortedColour) {\n  for (let i = 0; i < animations.length; i++) {\n    const arrayBars = document.getElementsByClassName('array-bar');\n    const colourChange = i % 3 !== 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex, isFinalSort] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 3 === 0 ? selectionColour : isFinalSort ? sortedColour : barsColour;\n      setTimeout(() => {\n        firstBarStyle.backgroundColor = colour;\n        secondBarStyle.backgroundColor = colour;\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default mergeSort;\n","function swap(numsArray, i, j) {\n  const temp = numsArray[i];\n  numsArray[i] = numsArray[j];\n  numsArray[j] = temp;\n}\n\nexport default swap;\n","import swap from './Swap';\n\nfunction quickSort(array, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  quickSortAlgorithm(array, 0, array.length - 1, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction quickSortAlgorithm(numsArray, start, end, animations) {\n  if (start >= end) {\n    return;\n  }\n\n  let pivot = start;\n  let left = start + 1;\n  let right = end;\n\n  while (left <= right) {\n    animations.push([pivot, left, right]);\n    animations.push([pivot, left, right]);\n    if (numsArray[pivot] > numsArray[right] && numsArray[left] > numsArray[pivot]) {\n      animations.push([left, numsArray[right]]);\n      animations.push([right, numsArray[left]]);\n      swap(numsArray, left, right);\n    } else {\n      animations.push([left, numsArray[left]]);\n      animations.push([right, numsArray[right]]);\n    }\n    if (numsArray[left] <= numsArray[pivot]) left++;\n    if (numsArray[right] >= numsArray[pivot]) right--;\n  }\n\n  if (pivot !== right) {\n    animations.push([pivot, pivot, right]);\n    animations.push([pivot, pivot, right]);\n    animations.push([right, numsArray[pivot]]);\n    animations.push([pivot, numsArray[right]]);\n    swap(numsArray, pivot, right);\n  }\n\n  quickSortAlgorithm(numsArray, start, right - 1, animations);\n  quickSortAlgorithm(numsArray, right + 1, end, animations);\n}\n\nfunction drawAnimation(\n  animations,\n  animationSpeed,\n  barsColour,\n  pivotColour,\n  selectionColour,\n  sortedColour\n) {\n  var previousPivotIndex = 0;\n  const arrayBars = document.getElementsByClassName('array-bar');\n\n  for (let i = 0; i < animations.length; i++) {\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [pivotBarIndex, firstBarIndex, secondBarIndex] = animations[i];\n      const pivotBarStyle = arrayBars[pivotBarIndex].style;\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? selectionColour : barsColour;\n      setTimeout(() => {\n        if (pivotBarIndex !== previousPivotIndex) {\n          updatePivotColour(arrayBars, previousPivotIndex, pivotBarIndex, sortedColour);\n          previousPivotIndex = pivotBarIndex;\n        } else {\n          pivotBarStyle.backgroundColor = pivotColour;\n          firstBarStyle.backgroundColor = colour;\n          secondBarStyle.backgroundColor = colour;\n        }\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        if (i === animations.length - 1) {\n          updatePivotColour(arrayBars, 0, arrayBars.length, sortedColour);\n        }\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nfunction updatePivotColour(arrayBars, previousPivot, currentPivot, sortedColour) {\n  for (let i = previousPivot; i < currentPivot; i++) {\n    const previousPivotStyle = arrayBars[i].style;\n    previousPivotStyle.backgroundColor = sortedColour;\n  }\n}\n\nexport default quickSort;\n","import swap from './Swap';\n\nfunction bubbleSort(array, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour) {\n  if (array.length <= 1) return array;\n\n  const animations = [];\n  bubbleSortAlgorithm(array, animations);\n\n  drawAnimation(animations, animationSpeed, barsColour, pivotColour, selectionColour, sortedColour);\n\n  return array;\n}\n\nfunction bubbleSortAlgorithm(numsArray, animations) {\n  for (let i = 0; i < numsArray.length; i++) {\n    for (let j = i + 1; j < numsArray.length; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (numsArray[i] > numsArray[j]) {\n        animations.push([i, numsArray[j]]);\n        animations.push([j, numsArray[i]]);\n        swap(numsArray, i, j);\n      } else {\n        animations.push([i, numsArray[i]]);\n        animations.push([j, numsArray[j]]);\n      }\n    }\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([i, numsArray[i]]);\n    animations.push([i, numsArray[i]]);\n  }\n}\n\nfunction drawAnimation(\n  animations,\n  animationSpeed,\n  barsColour,\n  pivotColour,\n  selectionColour,\n  sortedColour\n) {\n  var previousFirstIndex = 0;\n  const arrayBars = document.getElementsByClassName('array-bar');\n\n  for (let i = 0; i < animations.length; i++) {\n    const colourChange = i % 4 < 2;\n    if (colourChange) {\n      const [firstBarIndex, secondBarIndex] = animations[i];\n      const firstBarStyle = arrayBars[firstBarIndex].style;\n      const secondBarStyle = arrayBars[secondBarIndex].style;\n      const colour = i % 4 === 0 ? selectionColour : barsColour;\n      setTimeout(() => {\n        if (firstBarIndex !== previousFirstIndex) {\n          const previouFirstBarStyle = arrayBars[previousFirstIndex].style;\n          previouFirstBarStyle.backgroundColor = sortedColour;\n          previousFirstIndex = firstBarIndex;\n        } else {\n          firstBarStyle.backgroundColor = pivotColour;\n          secondBarStyle.backgroundColor = colour;\n        }\n        if (firstBarIndex === arrayBars.length - 1) {\n          firstBarStyle.backgroundColor = sortedColour;\n        }\n      }, i * animationSpeed);\n    } else {\n      setTimeout(() => {\n        const [firstBarIndex, newHeight] = animations[i];\n        const firstBarStyle = arrayBars[firstBarIndex].style;\n        firstBarStyle.height = `${newHeight}px`;\n      }, i * animationSpeed);\n    }\n  }\n}\n\nexport default bubbleSort;\n","import { createAction, handleActions } from 'redux-actions';\n\nconst initialState = [];\n\nexport const SET_ARRAY = 'SET_ARRAY';\nexport const setArray = createAction(SET_ARRAY);\n\nexport const array = handleActions(\n  {\n    SET_ARRAY: (state, { payload }) => {\n      return payload;\n    },\n  },\n  initialState\n);\n","import { createAction, handleActions } from 'redux-actions';\n\nconst initialState = false;\n\nexport const SET_SORTED = 'SET_SORTED';\nexport const setSorted = createAction(SET_SORTED);\n\nexport const isSorted = handleActions(\n  {\n    SET_SORTED: (state, { payload }) => {\n      return payload;\n    },\n  },\n  initialState\n);\n","function testSortingAlgorithms(originalArray, sortedArray) {\n  const jsSortedArray = originalArray.slice().sort((a, b) => a - b);\n  const areEqual = arraysAreEqual(jsSortedArray, sortedArray);\n  if (!areEqual) {\n    alert('Sorting algorithm is not returning the correct result.');\n  }\n  console.log('arraysEqual: ', areEqual);\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray == null || secondArray == null) return firstArray === secondArray;\n  if (firstArray.length !== secondArray.length) return false;\n\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) return false;\n  }\n\n  return true;\n}\n\nexport default testSortingAlgorithms;\n","import Footer from '../components/Footer/Footer';\nimport { connect } from 'react-redux';\nimport constants from '../constants';\nimport mergeSort from '../algorithms/MergeSort';\nimport quickSort from '../algorithms/QuickSort';\nimport bubbleSort from '../algorithms/BubbleSort';\nimport { setArray } from '../reducers/arrayReducer';\nimport { setSorted } from '../reducers/sortedReducer';\nimport testSortingAlgorithms from '../algorithms/TestSortingAlgorithms.js';\n\nconst { animationSpeedMS, greenColour, blueColour, redColour, barsColour } = constants;\n\nconst mapStateToProps = (state) => ({\n  array: state.array,\n  isSorted: state.isSorted,\n});\n\nconst mapDispatchToProps = () => (dispatch) => ({\n  generateNewArray: () => {\n    const array = [];\n    const minHeight = window.innerHeight <= 500 ? 1 : 100;\n    const maxHeight = window.innerHeight - 200;\n    const barsCount = Math.floor((window.innerWidth * 5) / 192);\n    for (let i = 0; i < barsCount; i++) {\n      array.push(generateRandomInteger(minHeight, maxHeight));\n    }\n    changeArrayBarColours(barsColour);\n    dispatch(setArray(array));\n    dispatch(setSorted(false));\n  },\n  bubbleSort: (array, sorted) => {\n    if (array == null || sorted) return;\n    const sortedArray = bubbleSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      greenColour,\n      redColour,\n      blueColour\n    );\n    dispatch(setSorted(true));\n    testSortingAlgorithms(array, sortedArray);\n  },\n  mergeSort: (array, sorted) => {\n    if (array == null || sorted) return;\n    const sortedArray = mergeSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      redColour,\n      blueColour\n    );\n    dispatch(setSorted(true));\n    testSortingAlgorithms(array, sortedArray);\n  },\n  quickSort: (array, sorted) => {\n    if (array == null || sorted) return;\n    const sortedArray = quickSort(\n      array.slice(),\n      animationSpeedMS,\n      barsColour,\n      greenColour,\n      redColour,\n      blueColour\n    );\n    dispatch(setSorted(true));\n    testSortingAlgorithms(array, sortedArray);\n  },\n});\n\nfunction changeArrayBarColours(colour) {\n  const arrayBars = document.getElementsByClassName('array-bar');\n  for (let i = 0; i < arrayBars.length; i++) {\n    const barStyle = arrayBars[i].style;\n    barStyle.backgroundColor = colour;\n  }\n}\n\nfunction generateRandomInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);\n","import React from 'react';\nimport Body from './containers/BodyContainer';\nimport Footer from './containers/FooterContainer';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <h1>Sorting Visualizer</h1>\n      <Body></Body>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport { array } from './arrayReducer';\nimport { isSorted } from './sortedReducer';\n\nconst reducers = combineReducers({\n  array,\n  isSorted,\n});\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './reducers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}